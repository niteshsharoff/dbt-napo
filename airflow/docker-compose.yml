---
version: '3.4'

x-common:
  &common
  image: napo-airflow:local
  user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
  environment:
    # Airflow Core
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
    AIRFLOW__CORE__FERNET_KEY: "UKMzEm3yIuFYEq1y3-2FxPNWSVwRASpahmQ9kQfEr8E="
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: True
    AIRFLOW__CORE__LOAD_EXAMPLES: False
    # Backend DB
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
    AIRFLOW__DATABASE__LOAD_DEFAULT_CONNECTIONS: False
    # GCP specific
    PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
    GOOGLE_APPLICATION_CREDENTIALS: /secrets/airflow/credentials.json
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock
    - ${HOME}/.config/gcloud/airflow_secrets:/secrets/airflow

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:

  postgres:
    image: postgres:14
    container_name: airflow-postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"
    depends_on:
      - postgres

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
    depends_on:
      - postgres

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow db init
    depends_on:
      - postgres