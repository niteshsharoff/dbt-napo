name: "Build and Deploy Airflow Image"

on:
  release:
    types: [published]

env:
  VPC_PROJECT_ID: ae32-vpc-host
  PROJECT_ID: ae32-vpcservice-datawarehouse
  BASTION_ZONE: europe-west2-a
  GKE_REGION: europe-west2
  GKE_CLUSTER: production
  GKE_NAMESPACE: airflow
  USE_GKE_GCLOUD_AUTH_PLUGIN: "True"

jobs:
  build:
    if: contains(github.ref, 'airflow')
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Google Login
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ae32-vpcservice-datawarehouse
          service_account_email: ${{ secrets.DATAWAREHOUSE_SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ secrets.DATAWAREHOUSE_SERVICE_ACCOUNT_KEY }}

      - name: Login to GCP container registry
        run: gcloud auth configure-docker --quiet

      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract version number
        env:
          BRANCH: ${{ github.ref_name }}
        id: extract_version
        run: echo "::set-output name=version_number::${BRANCH##*v}"

      - name: Build
        working-directory: airflow
        run: make docker_build GIT_COMMIT=latest
        env:
          DOCKER_REPO: ${{ secrets.DATA_WAREHOUSE_DOCKER_REPO }}
          DOCKER_TAG: ${{ steps.extract_version.outputs.version_number }}

      - name: Test
        working-directory: airflow
        run: make docker_test GIT_COMMIT=latest
        env:
          DOCKER_REPO: ${{ secrets.DATA_WAREHOUSE_DOCKER_REPO }}
          DOCKER_TAG: ${{ steps.extract_version.outputs.version_number }}

      - name: Push
        working-directory: airflow
        run: make docker_release GIT_COMMIT=latest
        env:
          DOCKER_REPO: ${{ secrets.DATA_WAREHOUSE_DOCKER_REPO }}
          DOCKER_TAG: ${{ steps.extract_version.outputs.version_number }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Login
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.INFRA_DEPLOYMENT_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: gke-gcloud-auth-plugin

      - name: Setup bastion host tunnel
        run: |
          nohup gcloud compute ssh ae32-bastion-host \
            --project ${VPC_PROJECT_ID} \
            --zone ${BASTION_ZONE} \
            --ssh-key-file=~/.ssh/id_rsa \
            --ssh-key-expire-after=5m \
            -- -L 17889:127.0.0.1:8888 -N &
          sleep 45
        shell: bash

      - name: Test get pods
        run: |
          gcloud container clusters get-credentials ${GKE_CLUSTER} \
            --region ${GKE_REGION} \
            --project ${PROJECT_ID}

          HTTPS_PROXY=127.0.0.1:17889 kubectl get pods -n ${GKE_NAMESPACE}
        shell: bash

      - name: Extract version number
        env:
          BRANCH: ${{ github.ref_name }}
        id: extract_version
        run: echo "::set-output name=version_number::${BRANCH##*v}"

      - name: Patch Deployment
        working-directory: airflow
        run: HTTPS_PROXY=127.0.0.1:17889 make kubectl_patch
        shell: bash
        env:
          DOCKER_REPO: ${{ secrets.DATA_WAREHOUSE_DOCKER_REPO }}
          DOCKER_TAG: ${{ steps.extract_version.outputs.version_number }}
